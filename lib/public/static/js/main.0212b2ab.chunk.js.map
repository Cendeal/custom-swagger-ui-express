{"version":3,"sources":["utils/plugin.util.tsx","components/JsonSvgIcon.tsx","constants/setting.ts","utils/common.util.ts","utils/jsonData.util.tsx","components/Plugins/LiveResponse.tsx","components/Plugins/BaseLayout.tsx","components/Plugins/AuthorizeBtn/AuthorizeBtn.jss.ts","components/Plugins/AuthorizeBtn/AuthorizeBtn.tsx","components/Plugins/Operations.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["overWriteOriginPlugin","Component","originComponentName","isExistContainer","name","system","OriginComponent","getComponents","components","props","originComponent","JsonSvg","viewBox","d","fill","color","JsonSvgIcon","Icon","component","RESPONSE_VIEW","flattenObject","data","rootKey","level","Object","_","isArray","keys","length","reduce","pre","cur","temp_key","isObject","_temp","values","filterData","filter","every","filterKey","target","find","item","dataIndex","remove","common","get","window","jsonToTableData","path","columns","dataSource","has","result","value","generateColumn","generateDataSource","Array","uniq","concat","map","isEmpty","scopeFilter","mergeWith","object","key","uuid","title","render","text","displayDataTypes","src","TabPane","Tabs","response","useState","responseView","setResponseView","body","setColumns","setDataSource","useEffect","headers","toJS","includes","tempBody","toJSON","targetData","view","localStorage","getItem","setItem","activeKey","onChange","tab","TableOutlined","scroll","y","x","style","borderCollapse","bordered","size","type","shape","icon","VerticalAlignTopOutlined","styles","authorization","display","alignItems","justifyContent","width","flexDirection","className","checkedChildren","unCheckedChildren","checked","a","temp_view","setTimeout","location","reload","Item","Menu","tags","spec","json","offsetTop","position","left","boxShadow","onSelect","e","document","querySelector","scrollIntoView","mode","tag","upperFirst","swaggerUrl","App","url","plugins","LiveResponse","BaseLayout","AuthorizeBtn","Operations","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.0212b2ab.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport interface IPlugin {\r\n    originComponent: React.FC,\r\n    system: any,\r\n\r\n    [propName: string]: any\r\n}\r\n\r\nexport const overWriteOriginPlugin = (Component: React.FC<IPlugin>, originComponentName = '', isExistContainer = true) => {\r\n    originComponentName = originComponentName || Component.name\r\n    return (system: any) => {\r\n        const {getComponents} = system\r\n        const OriginComponent = getComponents(originComponentName, isExistContainer) || ''\r\n        return {\r\n            components: {\r\n                [originComponentName]: (props: any) => <Component {...props}\r\n                                                                  originComponent={<OriginComponent {...props}/>}\r\n                                                                  system={system}/>\r\n            }\r\n        }\r\n    }\r\n}\r\n","import Icon from \"@ant-design/icons\";\r\nimport React from \"react\";\r\n\r\n// @ts-ignore\r\nconst JsonSvg = (props) => <svg {...props} viewBox=\"0 0 1024 1024\">\r\n    <path\r\n        d=\"M742.4 755.456H564.770133c-14.4384 0-26.112 12.475733-26.112 27.869867v168.618666h28.433067L742.4 760.439467v-4.983467zM742.4 699.733333v-88.183466c0-15.189333 11.4688-27.477333 25.6-27.477334s25.6 12.288 25.6 27.477334v160.136533c0 7.2192-2.645333 14.1312-7.338667 19.285333L596.087467 998.7072a24.746667 24.746667 0 0 1-18.261334 8.226133H194.56C129.536 1006.933333 76.8 950.306133 76.8 880.452267V143.530667C76.8 73.693867 129.536 17.066667 194.56 17.066667h481.28C740.864 17.066667 793.6 73.693867 793.6 143.547733v48.930134c0 15.189333-11.4688 27.477333-25.6 27.477333s-25.6-12.288-25.6-27.477333V143.530667c0-39.4752-29.7984-71.492267-66.56-71.492267H194.56c-36.7616 0-66.56 32.017067-66.56 71.509333v736.887467c0 39.4752 29.7984 71.492267 66.56 71.492267H486.4v-168.618667C486.4 737.160533 521.489067 699.733333 564.770133 699.733333H742.4zM289.058133 294.570667h33.3824l-15.581866 153.275733c-2.645333 26.026667-9.437867 45.056-20.4288 57.7536-12.1856 13.329067-29.986133 20.002133-53.674667 20.002133-20.548267 0-35.601067-6.3488-44.868267-19.0464-9.557333-12.6976-13.192533-30.139733-10.939733-52.360533l0.733867-7.304533h33.399466l-0.7168 6.997333c-2.645333 26.0096 6.024533 39.0144 26.282667 39.0144 11.127467 0 19.797333-3.805867 25.668267-11.093333 5.888-7.304533 9.642667-19.0464 11.281066-35.2256l15.4624-152.0128z m144.128-4.437334c23.978667 0 42.257067 5.393067 54.545067 16.503467 13.073067 11.741867 19.473067 30.139733 18.944 54.903467H473.6c-1.4336-13.9776-5.819733-24.132267-12.629333-30.1568-6.775467-6.3488-17.902933-9.198933-32.733867-9.198934-12.8512 0-22.7328 1.911467-30.0032 6.024534-9.045333 4.778667-13.858133 12.6976-14.9504 23.483733-0.9728 9.5232 2.798933 17.4592 11.912533 23.176533 4.027733 2.525867 15.240533 7.287467 33.399467 13.960534 26.709333 9.506133 43.6224 17.134933 51.0976 22.203733 16.503467 11.741867 23.7056 27.938133 21.572267 48.878933-2.048 20.309333-10.837333 36.488533-26.299734 48.2304-15.428267 11.434667-36.3008 17.4592-62.276266 17.4592-25.105067 0-44.253867-5.393067-57.1392-16.196266-15.7696-13.312-23.04-34.269867-21.538134-63.146667h33.109334c0.512 17.134933 4.693333 29.525333 12.8 36.8128 7.338667 6.3488 19.2512 9.8304 36.096 9.8304 14.848 0 27.101867-2.850133 36.215466-8.2432 9.147733-5.717333 14.455467-13.0048 15.428267-22.528 1.211733-12.066133-4.369067-21.589333-16.213333-28.5696-3.771733-2.218667-16.384-7.287467-38.161067-14.916267-24.200533-8.874667-39.253333-15.223467-44.868267-19.029333-14.626133-10.478933-20.7872-25.7024-18.7392-45.704533 2.030933-19.985067 11.0592-35.84 27.630934-47.274667 15.394133-11.093333 33.928533-16.503467 55.893333-16.503467z m207.223467 0c31.112533 0 54.528 11.093333 70.212267 33.621334 14.9504 21.282133 20.650667 49.527467 17.1008 84.4288-3.549867 34.901333-14.9504 62.8224-34.235734 84.087466-20.241067 22.2208-45.909333 33.3312-77.0048 33.3312-31.402667 0-54.784-11.434667-70.212266-33.6384-14.933333-21.589333-20.360533-49.5104-16.878934-83.797333 3.515733-34.577067 14.626133-62.498133 33.962667-84.0704C583.338667 301.226667 609.006933 290.133333 640.392533 290.133333z m-3.242667 32.682667c-21.128533 0-38.1952 7.936-51.5072 23.808-12.680533 15.223467-20.1728 35.5328-22.818133 61.559467-2.6112 25.7024 0.750933 46.011733 10.325333 61.252266 9.847467 15.530667 25.582933 23.466667 46.6944 23.466667 21.128533 0 38.161067-7.611733 51.0976-22.528 12.629333-14.916267 20.445867-35.5328 23.159467-62.190933 2.7136-26.658133-0.8704-47.616-10.4448-62.839467-9.864533-15.223467-25.3952-22.528-46.506667-22.528z m131.84-28.245333h33.3824l84.1216 163.4304h1.143467l16.605867-163.4304h33.672533l-23.04 226.577066h-32.529067L797.354667 355.498667h-1.143467l-16.8448 165.649066H745.984l23.04-226.577066z\"\r\n        fill={props.color || '#555555'} {...props}/>\r\n</svg>\r\nconst JsonSvgIcon = (props: { [propsName: string]: any }) => <Icon component={JsonSvg} {...props}/>\r\nexport default JsonSvgIcon\r\n","export const RESPONSE_VIEW: any = 'custom_swagger_ui_setting_response_view'\r\n","import _ from \"lodash\";\r\n\r\nexport const flattenObject = (data: any, rootKey: string, level = 2) => {\r\n    if (data instanceof Object && !_.isArray(data)) {\r\n        if (_.keys(data).length > 1) {\r\n            return _.keys(data).reduce((pre: any, cur) => {\r\n                const temp_key = rootKey ? rootKey + '.' + cur : cur\r\n                if (_.isArray(data[cur])) {\r\n                    pre[temp_key] = data[cur]\r\n                    return pre\r\n                } else if (_.isObject(data[cur])) {\r\n                    const _temp: any = flattenObject(data[cur], temp_key, level - 1)\r\n                    return {...pre, ..._temp}\r\n                }\r\n                return {...pre, [temp_key]: data[cur]}\r\n            }, {})\r\n        }\r\n        return _.values(data)[0]\r\n    }\r\n    return rootKey ? {[rootKey]: data} : data\r\n}\r\n\r\nexport const filterData = (data: any, filter: string[]) => {\r\n    _.every(filter,(filterKey)=>{\r\n        const target = _.find(data,(item)=>item.dataIndex === filterKey)\r\n        if(target){\r\n            _.remove(data,target)\r\n            return false\r\n        }\r\n        return true\r\n    })\r\n    return data\r\n}\r\n","import _ from 'lodash'\r\nimport {v4 as uuid} from 'uuid'\r\nimport ReactJson from \"react-json-view\";\r\nimport {filterData, flattenObject} from \"./common.util\";\r\n\r\nconst common = _.get(window, 'SWAGGER_CONFIG.filter.common', [])\r\nexport const jsonToTableData = (data: any, path: string) => {\r\n    let columns: any[] = []\r\n    let dataSource: any = []\r\n    if (_.has(data, 'data.result')) {\r\n        data = data.data.result\r\n    } else if (_.has(data, 'data')) {\r\n        data = data.data\r\n    }\r\n\r\n    if (_.isObject(data) && _.keys(data).length === 1 && _.every(_.values(data),value=>!_.isObject(value))) {\r\n        columns = generateColumn(_.keys(data))\r\n        dataSource = generateDataSource([data])\r\n    } else {\r\n        data = flattenObject(data, '', _.get(window, 'SWAGGER_CONFIG.layer', 3))\r\n        if (data instanceof Array) {\r\n            const keys = _.uniq(_.concat([], ..._.map(data, (item) => _.keys(item))))\r\n            columns = generateColumn(keys)\r\n        } else if (data instanceof Object) {\r\n            columns = generateColumn(_.keys(data))\r\n        }\r\n        if (columns.length > 0 && !_.isEmpty(data)) {\r\n            dataSource = generateDataSource(_.isArray(data) ? data : [data])\r\n        }\r\n    }\r\n\r\n    //filter data\r\n    if(columns.length >0){\r\n        if (!_.isEmpty(common)) {\r\n            columns = filterData(columns, common)\r\n        }\r\n\r\n        const scopeFilter = _.get(window, 'SWAGGER_CONFIG.filter.routes.'+path)\r\n        if (!_.isEmpty(scopeFilter)) {\r\n            columns = filterData(columns, _.mergeWith(scopeFilter,common))\r\n        }\r\n\r\n    }\r\n\r\n    return {\r\n        columns,\r\n        data: dataSource\r\n    }\r\n}\r\n\r\nexport const generateDataSource = (object: any[]) => {\r\n    return object.map((value: any) => {\r\n        return {\r\n            ...value,\r\n            key: uuid()\r\n        }\r\n    })\r\n}\r\n\r\nexport const generateColumn = (keys: any[]) => {\r\n    return _.map(keys, (key: any) => ({\r\n        title: key,\r\n        dataIndex: key,\r\n        key: uuid(),\r\n        render: (text: any) => {\r\n            if (typeof text === 'object') {\r\n                return <ReactJson name={false} displayDataTypes={false} src={text}/>\r\n            }\r\n            return text\r\n        }\r\n    }))\r\n}\r\n","import {Table, Tabs} from \"antd\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {IPlugin, overWriteOriginPlugin} from \"../../utils/plugin.util\";\r\nimport {TableOutlined} from \"@ant-design/icons\";\r\nimport JsonSvgIcon from \"../JsonSvgIcon\";\r\nimport {RESPONSE_VIEW} from \"../../constants/setting\";\r\nimport {jsonToTableData} from \"../../utils/jsonData.util\";\r\n\r\nconst TabPane = Tabs.TabPane\r\nconst LiveResponse: React.FC<IPlugin> = (props) => {\r\n    const {originComponent, response, path} = props\r\n    const [responseView, setResponseView] = useState('JSON')\r\n    const body = response.get('body')\r\n    const [columns, setColumns] = useState<any[]>([])\r\n    const [dataSource, setDataSource] = useState<any[]>([])\r\n\r\n    useEffect(() => {\r\n            if (responseView === 'TABLE') {\r\n                const headers = response.get(\"headers\").toJS()\r\n                const contentType = headers[\"content-type\"] || headers[\"Content-Type\"]\r\n                if (contentType.includes('json')) {\r\n                    const tempBody = response.get('body').toJSON()\r\n                    const targetData = jsonToTableData(tempBody, path)\r\n                    setColumns(targetData.columns)\r\n                    setDataSource(targetData.data)\r\n                }\r\n            }\r\n\r\n        }, [body, path, response, responseView]\r\n    )\r\n\r\n    useEffect(() => {\r\n        const view: any = localStorage.getItem(RESPONSE_VIEW)\r\n        if (view && ['JSON', 'TABLE'].includes(view)) {\r\n            setResponseView(view)\r\n        } else {\r\n            setResponseView('JSON')\r\n            localStorage.setItem(RESPONSE_VIEW, 'JSON')\r\n        }\r\n    }, [])\r\n    return <Tabs activeKey={responseView} onChange={(value) => setResponseView(value)}>\r\n        <TabPane\r\n            tab={<span><JsonSvgIcon/>JSON VIEW</span>}\r\n            key=\"JSON\">\r\n            {originComponent}</TabPane>\r\n        <TabPane\r\n            tab={<span><TableOutlined/>TABLE VIEW</span>}\r\n            key=\"TABLE\">\r\n            <Table scroll={{y: 500, x: 286 * columns.length || 800}}\r\n                   style={{borderCollapse: 'collapse'}}\r\n                   bordered dataSource={dataSource} columns={columns}/>\r\n        </TabPane>\r\n    </Tabs>\r\n\r\n}\r\n\r\nexport default overWriteOriginPlugin(LiveResponse, 'liveResponse')\r\n","import {IPlugin, overWriteOriginPlugin} from \"../../utils/plugin.util\";\r\nimport React from \"react\";\r\nimport {BackTop, Button} from \"antd\";\r\nimport {VerticalAlignTopOutlined} from \"@ant-design/icons\";\r\n\r\nconst BaseLayout: React.FC<IPlugin> = (props) => {\r\n    const {originComponent} = props\r\n    return <div>\r\n        {originComponent}\r\n        <BackTop>\r\n            <Button size=\"large\" type='primary' shape=\"circle\" icon={<VerticalAlignTopOutlined/>}/>\r\n        </BackTop>\r\n    </div>\r\n}\r\n\r\nexport default overWriteOriginPlugin(BaseLayout,'BaseLayout')\r\n","export const styles= {\r\n    authorization:{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        width: '100%'\r\n    },\r\n    responseView:{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n    }\r\n}\r\n","import {IPlugin, overWriteOriginPlugin} from \"../../../utils/plugin.util\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {Switch} from \"antd\";\r\nimport {RESPONSE_VIEW} from \"../../../constants/setting\";\r\nimport {styles} from \"./AuthorizeBtn.jss\";\r\n\r\n\r\nconst AuthorizeBtn: React.FC<IPlugin> = ({originComponent}) => {\r\n    const [responseView, setResponseView] = useState('JSON')\r\n\r\n    useEffect(() => {\r\n        const view: any = localStorage.getItem(RESPONSE_VIEW)\r\n        if (view && ['JSON', 'TABLE'].includes(view)) {\r\n            setResponseView(view)\r\n        } else {\r\n            setResponseView('JSON')\r\n            localStorage.setItem(RESPONSE_VIEW, 'JSON')\r\n        }\r\n    }, [])\r\n    return <div style={styles.authorization}>\r\n        <div style={styles.responseView as React.CSSProperties}>\r\n            <label><span className='schemes-title'>Default Response View</span></label>\r\n            <Switch checkedChildren=\"JSON\" style={{width: '100%'}}\r\n                    unCheckedChildren=\"TABLE\" checked={responseView === 'JSON'}\r\n                    onChange={async checked => {\r\n                        const temp_view = checked ? 'JSON' : 'TABLE'\r\n                        await setResponseView(temp_view)\r\n                        localStorage.setItem(RESPONSE_VIEW, temp_view)\r\n                        setTimeout(()=>window.location.reload(),200)\r\n                    }}/>\r\n        </div>\r\n\r\n        {originComponent}\r\n    </div>\r\n}\r\nexport default overWriteOriginPlugin(AuthorizeBtn, 'authorizeBtn')\r\n","import {IPlugin, overWriteOriginPlugin} from \"../../utils/plugin.util\";\r\nimport React from \"react\";\r\nimport {Affix, Menu} from \"antd\";\r\nimport _ from 'lodash'\r\n\r\nconst {Item} = Menu;\r\nconst Operations: React.FC<IPlugin> = (props) => {\r\n    const {originComponent} = props\r\n    const tags = props?.spec()?.toJSON()?.json?.tags\r\n    return <div>\r\n        <Affix offsetTop={15}\r\n               style={{\r\n                   position: 'absolute',\r\n                   left: 50,\r\n               }}>\r\n            <Menu\r\n                style={{\r\n                    width: 150,\r\n                    boxShadow: \"0 1px 2px rgba(0 0 0 / 19%)\"\r\n                }}\r\n                onSelect={e => {\r\n                    document.querySelector(`#operations-tag-${e.key}`)?.scrollIntoView()\r\n                }}\r\n                mode=\"inline\">\r\n                {_.map(tags, (tag) => <Item key={tag.name}>{_.upperFirst(tag.name)}</Item>)}\r\n            </Menu>\r\n        </Affix>\r\n        {originComponent}\r\n    </div>\r\n}\r\n\r\nexport default overWriteOriginPlugin(Operations, 'operations')\r\n","import React from 'react';\nimport SwaggerUI from \"swagger-ui-react\"\nimport './App.css';\nimport LiveResponse from \"./components/Plugins/LiveResponse\";\nimport \"swagger-ui-react/swagger-ui.css\"\nimport 'antd/dist/antd.css';\nimport BaseLayout from \"./components/Plugins/BaseLayout\";\nimport AuthorizeBtn from \"./components/Plugins/AuthorizeBtn/AuthorizeBtn\";\nimport _ from 'lodash'\nimport Operations from \"./components/Plugins/Operations\";\nconst swaggerUrl = _.get(window, 'SWAGGER_CONFIG.route.docs', 'https://petstore.swagger.io/v2/swagger.json');\n\nfunction App() {\n    return (<SwaggerUI url={swaggerUrl}\n                       plugins={[LiveResponse, BaseLayout, AuthorizeBtn, Operations]}/>);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\nreportWebVitals();\n"],"sourceRoot":""}